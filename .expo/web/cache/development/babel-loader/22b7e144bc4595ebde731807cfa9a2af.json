{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/myrakiwi/Documents/2020-2021/CS4720/CreaTime-App/App.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as Font from \"expo-font\";\nimport Statistics from \"./App/Statistics/Statistics\";\nimport Mainpage from \"./App/Mainpage/Mainpage\";\nimport Home from \"./App/Home/Home\";\nimport TimeCountDay from \"./App/TimeCountDay/TimeCountDay\";\nimport TimeCountNight from \"./App/TimeCountNight/TimeCountNight\";\nimport dataList from \"./App/dataList/dataList\";\nimport React from \"react\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { AppLoading } from \"expo\";\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nvar Stack = createStackNavigator();\n\nvar App = function (_React$Component) {\n  _inherits(App, _React$Component);\n\n  var _super = _createSuper(App);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      fontsReady: false,\n      second: 0,\n      minute: 0,\n      hour: 0\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.initProjectFonts();\n    }\n  }, {\n    key: \"initProjectFonts\",\n    value: function initProjectFonts() {\n      return _regeneratorRuntime.async(function initProjectFonts$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(Font.loadAsync({\n                \".AppleSystemUIFont\": require(\"./assets/fonts/SFNS.ttf\")\n              }));\n\n            case 2:\n              this.setState({\n                fontsReady: true\n              });\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(NavigationContainer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 5\n        }\n      }, React.createElement(Stack.Navigator, {\n        initialRouteName: \"Home\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }\n      }, React.createElement(Stack.Screen, {\n        name: \"Home\",\n        component: Home,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 7\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"Mainpage\",\n        component: Mainpage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"Statistics\",\n        component: Statistics,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }\n      })));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport { App as default };","map":{"version":3,"sources":["/Users/myrakiwi/Documents/2020-2021/CS4720/CreaTime-App/App.js"],"names":["Font","Statistics","Mainpage","Home","TimeCountDay","TimeCountNight","dataList","React","AppLoading","TouchableOpacity","NavigationContainer","createStackNavigator","Stack","App","props","state","fontsReady","second","minute","hour","initProjectFonts","loadAsync","require","setState","Component"],"mappings":";;;;;;;;;;;;AAQA,OAAO,KAAKA,IAAZ,MAAsB,WAAtB;AACA,OAAOC,UAAP;AACA,OAAOC,QAAP;AACA,OAAOC,IAAP;AACA,OAAOC,YAAP;AACA,OAAOC,cAAP;AACA,OAAOC,QAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;;;AAEA,SAASC,UAAT,QAA2B,MAA3B;AAEA,SAASC,gBAAT,QAAiC,8BAAjC;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,oBAAT,QAAqC,yBAArC;AAIA,IAAMC,KAAK,GAAGD,oBAAoB,EAAlC;;IAEqBE,G;;;;;AAEpB,eAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AAClB,8BAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACZC,MAAAA,UAAU,EAAE,KADA;AAEZC,MAAAA,MAAM,EAAE,CAFI;AAGZC,MAAAA,MAAM,EAAE,CAHI;AAIZC,MAAAA,IAAI,EAAE;AAJM,KAAb;AAFkB;AAQlB;;;;WAED,6BAAoB;AAEnB,WAAKC,gBAAL;AACA;;;WAED;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAEOpB,IAAI,CAACqB,SAAL,CAAe;AACpB,sCAAsBC,OAAO;AADT,eAAf,CAFP;;AAAA;AAMC,mBAAKC,QAAL,CAAc;AACbP,gBAAAA,UAAU,EAAE;AADC,eAAd;;AAND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;WAWA,kBAAS;AACR,aAEE,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACM,oBAAC,KAAD,CAAO,SAAP;AAAiB,QAAA,gBAAgB,EAAC,MAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACJ,oBAAC,KAAD,CAAO,MAAP;AAAc,QAAA,IAAI,EAAC,MAAnB;AAA0B,QAAA,SAAS,EAAEb,IAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADI,EAEE,oBAAC,KAAD,CAAO,MAAP;AAAc,QAAA,IAAI,EAAC,UAAnB;AAA8B,QAAA,SAAS,EAAED,QAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAGE,oBAAC,KAAD,CAAO,MAAP;AAAc,QAAA,IAAI,EAAC,YAAnB;AAAgC,QAAA,SAAS,EAAED,UAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,CADN,CAFF;AAUA;;;;EAvC+BM,KAAK,CAACiB,S;;SAAlBX,G","sourcesContent":["//\n//  App.js\n//  Creatime-screens\n//\n//  Created by [Author].\n//  Copyright Â© 2018 [Company]. All rights reserved.\n//\n\nimport * as Font from \"expo-font\"\nimport Statistics from \"./App/Statistics/Statistics\"\nimport Mainpage from \"./App/Mainpage/Mainpage\"\nimport Home from \"./App/Home/Home\"\nimport TimeCountDay from \"./App/TimeCountDay/TimeCountDay\"\nimport TimeCountNight from \"./App/TimeCountNight/TimeCountNight\"\nimport dataList from \"./App/dataList/dataList\"\nimport React from \"react\"\nimport { Image, StyleSheet, Text, View } from \"react-native\"\nimport { AppLoading } from \"expo\"\n\nimport { TouchableOpacity } from 'react-native-gesture-handler'\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\n\n\n//add navigation here\nconst Stack = createStackNavigator();\n\nexport default class App extends React.Component {\n\n\tconstructor(props) {\n\t\tsuper(props)\n\t\tthis.state = {\n\t\t\tfontsReady: false,\n\t\t\tsecond: 0,\n\t\t\tminute: 0,\n\t\t\thour: 0,\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\t\n\t\tthis.initProjectFonts()\n\t}\n\n\tasync initProjectFonts() {\n\t\n\t\tawait Font.loadAsync({\n\t\t\t\".AppleSystemUIFont\": require(\"./assets/fonts/SFNS.ttf\"),\n\t\t\t\n\t\t})\n\t\tthis.setState({\n\t\t\tfontsReady: true,\n\t\t})\n\t}\n\n\trender() {\n\t\treturn(\n\t\n\t\t\t\t<NavigationContainer>\n      \t\t\t\t<Stack.Navigator initialRouteName=\"Home\">\n\t\t\t\t\t\t<Stack.Screen name=\"Home\" component={Home}/>\n        \t\t\t\t<Stack.Screen name=\"Mainpage\" component={Mainpage} />\n        \t\t\t\t<Stack.Screen name=\"Statistics\" component={Statistics} />\n      \t\t\t\t</Stack.Navigator>\n    \t\t\t</NavigationContainer>\n\t\t);\n\t}\n}\n\n\n"]},"metadata":{},"sourceType":"module"}